{"version":3,"sources":["components/CardList.js","components/SearchBox.js","components/scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["CardList","robots","Error","SearchBox","searchfield","searchChange","className","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","name","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAyBeA,EAtBE,SAAC,GAAa,EAAZC,OAEX,MAAM,IAAIC,MAAM,WCUTC,EAbG,SAAC,GAAkC,EAAhCC,YAAiC,IAApBC,EAAmB,EAAnBA,aAChC,OACE,qBAAKC,UAAU,MAAf,SACE,uBACEA,UAAU,mCACVC,KAAK,SACLC,YAAY,gBACZC,SAAUJ,OCCHK,G,MARA,SAACC,GACZ,OACI,qBAAKC,MAAQ,CAACC,UAAW,SAAUC,OAAO,kBAAmBC,OAAQ,SAArE,SACKJ,EAAMK,aCiBHC,E,kDAnBZ,WAAYN,GAAQ,IAAD,8BACf,cAAMA,IACDO,MAAQ,CACTC,UAAU,GAHC,E,qDAOnB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAACJ,UAAS,M,oBAG5B,WACI,OAAGG,KAAKJ,MAAMC,SACH,0DAEJG,KAAKX,MAAMK,a,GAhBCQ,aC6CZC,E,kDAtCX,aAAe,IAAD,8BACV,gBAYJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAAEnB,YAAauB,EAAMC,OAAOC,SAZ1C,EAAKX,MAAQ,CACTjB,OAAQ,GACRG,YAAa,IAJP,E,qDAQd,WAAqB,IAAD,OACpB0B,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAK,OAAI,EAAKX,SAAS,CAACtB,OAAQiC,S,oBAM1C,WACI,MAA8BZ,KAAKJ,MAA5BjB,EAAP,EAAOA,OAAQG,EAAf,EAAeA,YACT+B,EAAiBlC,EAAOmC,QAAO,SAAAC,GACjC,OAAOA,EAAMC,KAAKC,cAAcC,SAASpC,EAAYmC,kBAErD,OAAQtC,EAAOwC,OAGf,sBAAKnC,UAAU,KAAf,UACI,oBAAIA,UAAW,KAAf,yBACA,cAAC,EAAD,CAAWD,aAAciB,KAAKI,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACA,cAAC,EAAD,CAAUzB,OAAQkC,WAP1B,6C,GAxBMX,aCIHkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCEdO,IAASC,OACP,eAAC,IAAMC,WAAP,WACC,cAAC,EAAD,IADD,OAGAC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c5be58ad.chunk.js","sourcesContent":["import React from \"react\";\nimport Card from \"./Card\";\n\nconst CardList = ({robots}) => {\n    if (true) {\n        throw new Error('Nooooo')\n    }\n    return (\n        <div>\n            {\n                robots.map((user,i) => {\n                    return (\n                        <Card \n                        key={i} \n                        id={robots[i].id} \n                        name={robots[i].name} \n                        email={robots[i].email}\n                        />\n                    );\n                })\n            }\n        </div>\n    );\n}\n\nexport default CardList;","import React from 'react';\n\nconst SearchBox = ({ searchfield, searchChange }) => {\n  return (\n    <div className='pa2'>\n      <input\n        className='pa3 ba b--green bg-lightest-blue'\n        type='search'\n        placeholder='search robots'\n        onChange={searchChange}\n      />\n    </div>\n  );\n}\n\nexport default SearchBox;","import React from \"react\";\n\nconst Scroll = (props) => {\n    return (\n        <div style= {{overflowY: 'scroll', border:'5px solid black', height: '800px'}}>\n            {props.children}\n        </div>\n    );\n};\n\nexport default Scroll;\n","import React, {Component} from \"react\";\n\nclass ErrorBoundry extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hasError: false\n        }\n    }\n\n    componentDidCatch(error, info) {\n        this.setState({hasError:true})\n    }\n\n    render() {\n        if(this.state.hasError) {\n            return <h1>Oooops. That is not good</h1>\n        }\n        return this.props.children\n    }\n }\n\n export default ErrorBoundry;","import React, { Component } from \"react\";\nimport CardList from \"../components/CardList\";\nimport SearchBox from '../components/SearchBox'\nimport './App.css';\nimport Scroll from '../components/scroll'\nimport ErrorBoundry from '../components/ErrorBoundry'\n\n\nclass App extends Component {\n    constructor() {\n        super()\n        this.state = {\n            robots: [],\n            searchfield: ''\n        }\n    }\n\n    componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n        .then(response=> response.json())\n        .then(users => this.setState({robots: users}));\n}\n    onSearchChange = (event) => {\n        this.setState({ searchfield: event.target.value })\n    }\n\n    render() {\n        const {robots, searchfield} = this.state;\n        const filteredRobots = robots.filter(robot => {\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n        })\n            return !robots.length ? \n            <h1>Loading</h1> :\n    (\n            <div className='tc'>\n                <h1 className= 'f2'>RoboFriends</h1>\n                <SearchBox searchChange={this.onSearchChange} />\n                <Scroll>\n                    <ErrorBoundry>\n                    <CardList robots={filteredRobots} />\n                    </ErrorBoundry>\n                </Scroll>\n            </div>\n        );\n        \n    }\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App'\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n   <App />,\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}